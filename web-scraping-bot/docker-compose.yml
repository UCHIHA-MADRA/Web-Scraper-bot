version: '3.8'

services:
  web-scraper:
    build: .
    volumes:
      - ./reports:/app/reports
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config:/app/config
      - ./monitoring:/app/monitoring
      - ./deployment:/app/deployment
    environment:
      - PYTHONPATH=/app
      - TZ=UTC
      - MONITORING_CONFIG=/app/monitoring/monitoring_config.yaml
      - DEPLOYMENT_CONFIG=/app/deployment/deployment_config.yaml
    restart: unless-stopped
    networks:
      - scraper-network
    
  scheduler:
    build: .
    command: python scripts/scheduler.py
    volumes:
      - ./reports:/app/reports
      - ./logs:/app/logs
      - ./data:/app/data
      - ./config:/app/config
      - ./monitoring:/app/monitoring
    environment:
      - PYTHONPATH=/app
      - TZ=UTC
      - MONITORING_CONFIG=/app/monitoring/monitoring_config.yaml
    restart: unless-stopped
    depends_on:
      - web-scraper
    networks:
      - scraper-network

  dashboard:
    build: .
    command: python web/app.py
    ports:
      - "5000:5000"
    volumes:
      - ./reports:/app/reports
      - ./logs:/app/logs
      - ./data:/app/data
    environment:
      - PYTHONPATH=/app
      - FLASK_ENV=production
    restart: unless-stopped
    networks:
      - scraper-network
      
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - "9090:9090"
    restart: unless-stopped
    networks:
      - scraper-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-simple-json-datasource
    ports:
      - "3000:3000"
    restart: unless-stopped
    networks:
      - scraper-network
    depends_on:
      - prometheus

networks:
  scraper-network:
    driver: bridge

volumes:
  prometheus-data:
  grafana-data:
